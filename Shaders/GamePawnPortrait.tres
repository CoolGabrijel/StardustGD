[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://g3tl7v57p1hx"]

[ext_resource type="Texture2D" uid="uid://cf2xy8cu14wbe" path="res://Textures/CaptainHoers/Horse cards/Concorde.png" id="1_tfbpt"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_q0smr"]
parameter_name = "Scale"
default_value_enabled = true
default_value = 15.0

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_twoqo"]
parameter_name = "Panning"

[sub_resource type="VisualShaderNodeVectorDistance" id="VisualShaderNodeVectorDistance_t1g7v"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.5, 0.5)]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ixrnw"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_pk0kk"]
output_port_for_preview = 0
function = 31

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_f8wqx"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.5, 2, 1e-05]
function = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_mqcyb"]
source = 2
texture = ExtResource("1_tfbpt")

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_df4xv"]
default_input_values = [1, Vector2(15, 15), 2, Vector2(0.5, 0.5)]
function = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_a5c7j"]
default_input_values = [1, Vector2(0.015, 0), 2, Vector2(1, 1)]

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec2 Panning;
uniform float Scale = 15;



void fragment() {
// Vector2Parameter:11
	vec2 n_out11p0 = Panning;


// UVFunc:9
	vec2 n_in9p2 = vec2(1.00000, 1.00000);
	vec2 n_out9p0 = n_in9p2 * n_out11p0 + UV;


// FloatParameter:10
	float n_out10p0 = Scale;


// UVFunc:8
	vec2 n_in8p2 = vec2(0.50000, 0.50000);
	vec2 n_out8p0 = (n_out9p0 - n_in8p2) * vec2(n_out10p0) + n_in8p2;


	vec4 n_out7p0;
// Texture2D:7
	n_out7p0 = texture(TEXTURE, n_out8p0);


// Input:3
	vec2 n_out3p0 = UV;


// Distance:2
	vec2 n_in2p1 = vec2(0.50000, 0.50000);
	float n_out2p0 = distance(n_out3p0, n_in2p1);


// FloatFunc:4
	float n_out4p0 = 1.0 - n_out2p0;


// Compare:5
	float n_in5p1 = 0.50000;
	bool n_out5p0 = n_out4p0 > n_in5p1;


// Output:0
	COLOR.rgb = vec3(n_out7p0.xyz);
	COLOR.a = (n_out5p0 ? 1.0 : 0.0);


}
"
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeVectorDistance_t1g7v")
nodes/fragment/2/position = Vector2(-280, 340)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_ixrnw")
nodes/fragment/3/position = Vector2(-600, 360)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatFunc_pk0kk")
nodes/fragment/4/position = Vector2(-100, 360)
nodes/fragment/5/node = SubResource("VisualShaderNodeCompare_f8wqx")
nodes/fragment/5/position = Vector2(100, 340)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture_mqcyb")
nodes/fragment/7/position = Vector2(80, -120)
nodes/fragment/8/node = SubResource("VisualShaderNodeUVFunc_df4xv")
nodes/fragment/8/position = Vector2(-300, -60)
nodes/fragment/9/node = SubResource("VisualShaderNodeUVFunc_a5c7j")
nodes/fragment/9/position = Vector2(-640, -100)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatParameter_q0smr")
nodes/fragment/10/position = Vector2(-580, 100)
nodes/fragment/11/node = SubResource("VisualShaderNodeVec2Parameter_twoqo")
nodes/fragment/11/position = Vector2(-960, -80)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 0, 2, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 1, 7, 0, 0, 0, 9, 0, 8, 0, 10, 0, 8, 1, 11, 0, 9, 1, 8, 0, 7, 0)
