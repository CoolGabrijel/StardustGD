[gd_resource type="VisualShader" load_steps=8 format=3 uid="uid://dee1ym3im1kl7"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1meo1"]
input_name = "color"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_a4die"]
frequency = 1.0
fractal_type = 0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_lfg43"]
noise = SubResource("FastNoiseLite_a4die")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_a61l2"]
output_port_for_preview = 0
texture = SubResource("NoiseTexture2D_lfg43")

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_sj0iv"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_bfjmp"]
default_input_values = [0, 0.91, 1, 0.0]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_vfu55"]
input_name = "screen_uv"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D tex_frg_3;



void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


// Input:7
	vec2 n_out7p0 = SCREEN_UV;


// Texture2D:3
	vec4 n_out3p0 = texture(tex_frg_3, n_out7p0);


// Step:6
	float n_in6p0 = 0.91000;
	float n_out6p0 = step(n_in6p0, n_out3p0.x);


// VectorOp:4
	vec3 n_out4p0 = vec3(n_out2p0.xyz) + vec3(n_out6p0);


// Output:0
	COLOR.rgb = n_out4p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_1meo1")
nodes/fragment/2/position = Vector2(-500, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_a61l2")
nodes/fragment/3/position = Vector2(-640, 400)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorOp_sj0iv")
nodes/fragment/4/position = Vector2(20, 200)
nodes/fragment/6/node = SubResource("VisualShaderNodeStep_bfjmp")
nodes/fragment/6/position = Vector2(-320, 400)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_vfu55")
nodes/fragment/7/position = Vector2(-1000, 500)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 4, 0, 0, 0, 3, 0, 6, 1, 6, 0, 4, 1, 7, 0, 3, 0)
